class o{constructor(s,t,h){this.pos=t,this.r=h,this.offset=s.random(1e4)}update(s,t){var h=s.map(s.noise(t+this.offset),0,1,-1,1),n=s.map(s.noise(t+this.offset+1e4),0,1,-1,1);const r=s.createVector(h,n);r.mult(3),this.pos.add(r),this.pos.x<this.r?this.pos.x=this.r:this.pos.x>s.width-this.r&&(this.pos.x=s.width-this.r),this.pos.y<this.r?this.pos.y=this.r:this.pos.y>s.height-this.r&&(this.pos.y=s.height-this.r)}intersects(s,t){return this.r<=1?!1:Math.sqrt((s-this.pos.x)*(s-this.pos.x)+(t-this.pos.y)*(t-this.pos.y))<this.r}split(s){if(this.r<=1)return;const t=s.createVector(s.random(-1,1),s.random(-1,1));return t.normalize(),t.mult(this.r/2),[new o(s,s.createVector(this.pos.x-t.x,this.pos.y-t.y),this.r/1.2),new o(s,s.createVector(this.pos.x+t.x,this.pos.y+t.y),this.r/1.2)]}display(s){s.ellipse(this.pos.x,this.pos.y,this.r*2,this.r*2)}}let e=[],l=0;function c(){this.createCanvas(400,400),this.smooth(),this.noStroke(),this.ellipseMode(this.CENTER),this.fill(245,180),e.push(new o(this,this.createVector(this.width/2,this.height/2),80))}function a(){this.background(57,57,108);for(let i of e)i.update(this,l),i.display(this);l+=.008}function f(){for(let i=e.length-1;i>=0;i--){const s=e[i];if(s.intersects(this.mouseX,this.mouseY)){const t=s.split(this);for(let h of t)e.push(h);e.splice(i,1);return}}}export{a as draw,f as mousePressed,c as setup};
